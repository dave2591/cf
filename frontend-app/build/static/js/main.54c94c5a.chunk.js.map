{"version":3,"sources":["components/HeaderComponent.tsx","components/LayoutContainer.tsx","components/TransactionItem.tsx","components/PlaceHolder.tsx","components/TransactionCharts.tsx","components/Transactions.tsx","api/client.ts","api/transactionClient.ts","components/App.tsx","index.tsx"],"names":["HeaderComponent","className","alt","src","LayoutContainer","props","children","TransactionItem","transaction","currency_to","currency_from","amount_buy","amount_sell","rate","originating_country","PlaceHolder","title","TransactionCharts","transactions","length","amountSellValues","map","avg","reduce","sum","el","isNaN","Math","round","average","Transactions","fetchTimer","state","loading","error","this","window","setInterval","fetchItems","clearInterval","client","find","lastId","then","result","data","setState","id","Object","keys","key","React","Component","API_ENDPOINT","TransactionClient","date_from","get","cursor","url","body","axios","post","Client","config","put","headers","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c94c5a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const HeaderComponent = () => {\n  return (\n      <div className={'header'}>\n          <div className={'logo'}>\n              <img alt={'Currency Fair Logo'} src={'logo.png'} />\n          </div>\n      </div>\n  );\n};","import React from \"react\";\nimport {HeaderComponent} from \"./HeaderComponent\";\n\nexport const LayoutContainer = (props: any) => {\n    return (\n        <div className='container'>\n            <HeaderComponent/>\n            <section className={'main'}>\n                {props.children}\n            </section>\n        </div>\n    );\n};","import React from \"react\";\nimport {TransactionInterface} from \"../types\";\n\ninterface TransactionItemProps {\n    transaction: TransactionInterface\n}\n\nexport const TransactionItem = (props: TransactionItemProps) => {\n    let {transaction} = props;\n\n    return (\n        <div className={'transaction-item'}>\n            <div className={'currencies'}>\n                <span>{transaction.currency_to}</span> / <span>{transaction.currency_from}</span>\n            </div>\n            <div className={'amounts'}>\n                Buy <span>{transaction.amount_buy}</span> / Sell <span>{transaction.amount_sell}</span>\n                <div className={'rate'}>\n                    Rate: {transaction.rate}\n                </div>\n            </div>\n            <div className={'country'}>\n                {transaction.originating_country}\n            </div>\n        </div>\n    );\n};","import React from \"react\";\nimport '../styles/placeholder.scss';\n\nexport const PlaceHolder = (props: { title: string }) => {\n    return (\n        <div className={'placeholder'}>\n            {props.title}\n        </div>\n    );\n};","import React from \"react\";\nimport {TransactionInterface} from \"../types\";\nimport '../styles/transaction-charts.scss';\n\nexport const TransactionCharts = (props: { transactions: TransactionInterface[] }) => {\n    function average() {\n        let amountSellValues: any = props.transactions.map(({amount_sell}) => amount_sell);\n        let avg = amountSellValues.reduce((sum: any, el: any) => sum + el, 0) / amountSellValues.length;\n\n        return isNaN(avg) ? '-' : Math.round(avg * 100) / 100;\n    }\n\n    return (\n        <div className={'transaction-charts'}>\n            <div className={'chart'}>\n                <div className={'title'}>Total Transactions</div>\n                {props.transactions.length}\n            </div>\n            <div className={'chart'}>\n                <div className={'title'}>Average Sell Value</div>\n                {average()}\n            </div>\n        </div>\n    );\n};","import React from \"react\";\nimport TransactionClient from \"../api/transactionClient\";\nimport {TransactionInterface} from \"../types\";\nimport {TransactionItem} from \"./TransactionItem\";\nimport '../styles/transactions.scss'\nimport {PlaceHolder} from \"./PlaceHolder\";\nimport {TransactionCharts} from \"./TransactionCharts\";\n\ninterface TransactionProps {\n    client: TransactionClient\n}\n\ninterface TransactionsState {\n    loading: boolean,\n    error: boolean,\n    transactions: TransactionInterface[],\n    lastId?: number\n}\n\nexport default class Transactions extends React.Component<TransactionProps, TransactionsState> {\n    private fetchTimer?: number;\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            error: false,\n            transactions: []\n        }\n    }\n\n    componentDidMount(): void {\n        this.fetchTimer = window.setInterval(() => this.fetchItems(), 1000)\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.fetchTimer)\n    }\n\n    fetchItems() {\n        this.props.client.find(this.state.lastId)\n            .then(\n                (result) => {\n                    let transactions = result.data.data;\n                    this.setState({\n                        loading: true,\n                        transactions: transactions,\n                        lastId: transactions.length ? transactions[0].id : null\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        error: true\n                    });\n                }\n            )\n    }\n\n    render() {\n        let {transactions} = this.state;\n\n        return (\n            <>\n                <TransactionCharts transactions={this.state.transactions}/>\n                <div className={'transactions'}>\n                    {!transactions.length && <PlaceHolder title={'Waiting for transactions...'}/>}\n\n                    {transactions && Object.keys(transactions).map(key => {\n                        // @ts-ignore\n                        return <TransactionItem key={transactions[key].id} transaction={transactions[key]}/>\n                    })}\n                </div>\n            </>\n\n        );\n    }\n}","import axios from \"axios\";\n\nconst API_ENDPOINT: string = 'http://127.0.0.1:2591/api';\n\nclass Client {\n    protected post(url: string, body: object) {\n        return axios.post(`${API_ENDPOINT}${url}`, body, Client.config);\n    }\n\n    protected put(url: string, body: object) {\n        return axios.put(`${API_ENDPOINT}${url}`, body, Client.config);\n    }\n\n    protected get(url: string) {\n        return axios.get(`${API_ENDPOINT}${url}`, Client.config);\n    }\n\n    private static get config() {\n        return {\n            headers: {\n                'content-type': 'application/json',\n                'accept': 'application/json'\n            }\n        }\n    }\n}\n\nexport {Client}","import {Client} from \"./client\";\n\nexport default class TransactionClient extends Client {\n    findByDateRange(date_from: string) {\n        return this.get(`/transactions/?date_from${date_from}`);\n    }\n\n    find(cursor?: number) {\n        return this.get(`/transactions` + (cursor ? '?cursor=' + cursor : ''));\n    }\n}","import React from 'react';\nimport {LayoutContainer} from \"./LayoutContainer\";\nimport Transactions from \"./Transactions\";\nimport TransactionClient from \"../api/transactionClient\";\n\nconst App = () => {\n    return (\n        <LayoutContainer>\n            <Transactions client={new TransactionClient}/>\n        </LayoutContainer>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/app.scss'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}